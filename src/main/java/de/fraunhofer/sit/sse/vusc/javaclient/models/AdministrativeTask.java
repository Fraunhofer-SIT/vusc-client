/*
 * Public API
 * Assessment API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: helpdesk@codeinspect.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.fraunhofer.sit.sse.vusc.javaclient.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Administrative task that can be executed on the server
 */
@ApiModel(description = "Administrative task that can be executed on the server")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-14T02:27:21.666995377Z[GMT]")
public class AdministrativeTask {
  public static final String SERIALIZED_NAME_TASK_ID = "taskId";
  @SerializedName(SERIALIZED_NAME_TASK_ID)
  private String taskId;

  public static final String SERIALIZED_NAME_TASK_NAME = "taskName";
  @SerializedName(SERIALIZED_NAME_TASK_NAME)
  private String taskName;

  public static final String SERIALIZED_NAME_TASK_DESCRIPTION = "taskDescription";
  @SerializedName(SERIALIZED_NAME_TASK_DESCRIPTION)
  private String taskDescription;

  public AdministrativeTask() { 
  }

  public AdministrativeTask taskId(String taskId) {
    
    this.taskId = taskId;
    return this;
  }

   /**
   * The unique ID of this task
   * @return taskId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The unique ID of this task")

  public String getTaskId() {
    return taskId;
  }


  public void setTaskId(String taskId) {
    this.taskId = taskId;
  }


  public AdministrativeTask taskName(String taskName) {
    
    this.taskName = taskName;
    return this;
  }

   /**
   * The human-readable name of this task
   * @return taskName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The human-readable name of this task")

  public String getTaskName() {
    return taskName;
  }


  public void setTaskName(String taskName) {
    this.taskName = taskName;
  }


  public AdministrativeTask taskDescription(String taskDescription) {
    
    this.taskDescription = taskDescription;
    return this;
  }

   /**
   * A description of what this task performs on the server
   * @return taskDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description of what this task performs on the server")

  public String getTaskDescription() {
    return taskDescription;
  }


  public void setTaskDescription(String taskDescription) {
    this.taskDescription = taskDescription;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdministrativeTask administrativeTask = (AdministrativeTask) o;
    return Objects.equals(this.taskId, administrativeTask.taskId) &&
        Objects.equals(this.taskName, administrativeTask.taskName) &&
        Objects.equals(this.taskDescription, administrativeTask.taskDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskId, taskName, taskDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdministrativeTask {\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("    taskDescription: ").append(toIndentedString(taskDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

