/*
 * Public API
 * Assessment API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: helpdesk@codeinspect.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.fraunhofer.sit.sse.vusc.javaclient.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.fraunhofer.sit.sse.vusc.javaclient.models.UsedConsumable;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Respresents a type of consumable, such as &#39;Analyzed Apps&#39;
 */
@ApiModel(description = "Respresents a type of consumable, such as 'Analyzed Apps'")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-14T02:27:21.666995377Z[GMT]")
public class ConsumedItemType {
  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private String key;

  public static final String SERIALIZED_NAME_TOTAL_CONSUMABLES = "totalConsumables";
  @SerializedName(SERIALIZED_NAME_TOTAL_CONSUMABLES)
  private Integer totalConsumables;

  public static final String SERIALIZED_NAME_USED_CONSUMABLES = "usedConsumables";
  @SerializedName(SERIALIZED_NAME_USED_CONSUMABLES)
  private List<UsedConsumable> usedConsumables = new ArrayList<UsedConsumable>();

  public ConsumedItemType() { 
  }

  public ConsumedItemType type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "App", required = true, value = "The type")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public ConsumedItemType key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * The license key for the consumable
   * @return key
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The license key for the consumable")

  public String getKey() {
    return key;
  }


  public void setKey(String key) {
    this.key = key;
  }


  public ConsumedItemType totalConsumables(Integer totalConsumables) {
    
    this.totalConsumables = totalConsumables;
    return this;
  }

   /**
   * The number of total consumables
   * @return totalConsumables
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The number of total consumables")

  public Integer getTotalConsumables() {
    return totalConsumables;
  }


  public void setTotalConsumables(Integer totalConsumables) {
    this.totalConsumables = totalConsumables;
  }


  public ConsumedItemType usedConsumables(List<UsedConsumable> usedConsumables) {
    
    this.usedConsumables = usedConsumables;
    return this;
  }

  public ConsumedItemType addUsedConsumablesItem(UsedConsumable usedConsumablesItem) {
    this.usedConsumables.add(usedConsumablesItem);
    return this;
  }

   /**
   * The used consumables
   * @return usedConsumables
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The used consumables")

  public List<UsedConsumable> getUsedConsumables() {
    return usedConsumables;
  }


  public void setUsedConsumables(List<UsedConsumable> usedConsumables) {
    this.usedConsumables = usedConsumables;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsumedItemType consumedItemType = (ConsumedItemType) o;
    return Objects.equals(this.type, consumedItemType.type) &&
        Objects.equals(this.key, consumedItemType.key) &&
        Objects.equals(this.totalConsumables, consumedItemType.totalConsumables) &&
        Objects.equals(this.usedConsumables, consumedItemType.usedConsumables);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, key, totalConsumables, usedConsumables);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsumedItemType {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    totalConsumables: ").append(toIndentedString(totalConsumables)).append("\n");
    sb.append("    usedConsumables: ").append(toIndentedString(usedConsumables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

