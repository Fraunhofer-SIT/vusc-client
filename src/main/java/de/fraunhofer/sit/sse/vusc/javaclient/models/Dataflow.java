/*
 * Public API
 * Assessment API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: helpdesk@codeinspect.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.fraunhofer.sit.sse.vusc.javaclient.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.fraunhofer.sit.sse.vusc.javaclient.models.Path;
import de.fraunhofer.sit.sse.vusc.javaclient.models.SourceSinkMetaData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Data flow abstraction
 */
@ApiModel(description = "Data flow abstraction")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-14T02:27:21.666995377Z[GMT]")
public class Dataflow {
  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private Path path;

  public static final String SERIALIZED_NAME_SOURCE_CATEGORY = "sourceCategory";
  @SerializedName(SERIALIZED_NAME_SOURCE_CATEGORY)
  private String sourceCategory;

  public static final String SERIALIZED_NAME_SOURCE_NAME = "sourceName";
  @SerializedName(SERIALIZED_NAME_SOURCE_NAME)
  private String sourceName;

  public static final String SERIALIZED_NAME_SINK_CATEGORY = "sinkCategory";
  @SerializedName(SERIALIZED_NAME_SINK_CATEGORY)
  private String sinkCategory;

  public static final String SERIALIZED_NAME_SINK_NAME = "sinkName";
  @SerializedName(SERIALIZED_NAME_SINK_NAME)
  private String sinkName;

  public static final String SERIALIZED_NAME_RELATION = "relation";
  @SerializedName(SERIALIZED_NAME_RELATION)
  private String relation;

  public static final String SERIALIZED_NAME_SOURCE_META_DATA = "sourceMetaData";
  @SerializedName(SERIALIZED_NAME_SOURCE_META_DATA)
  private SourceSinkMetaData sourceMetaData;

  public static final String SERIALIZED_NAME_SINK_META_DATA = "sinkMetaData";
  @SerializedName(SERIALIZED_NAME_SINK_META_DATA)
  private SourceSinkMetaData sinkMetaData;

  public Dataflow() { 
  }

  public Dataflow path(Path path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Path getPath() {
    return path;
  }


  public void setPath(Path path) {
    this.path = path;
  }


  public Dataflow sourceCategory(String sourceCategory) {
    
    this.sourceCategory = sourceCategory;
    return this;
  }

   /**
   * The name of the source category
   * @return sourceCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Unique Identifier", value = "The name of the source category")

  public String getSourceCategory() {
    return sourceCategory;
  }


  public void setSourceCategory(String sourceCategory) {
    this.sourceCategory = sourceCategory;
  }


  public Dataflow sourceName(String sourceName) {
    
    this.sourceName = sourceName;
    return this;
  }

   /**
   * The description of the concrete source value
   * @return sourceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Device ID (IMEI)", value = "The description of the concrete source value")

  public String getSourceName() {
    return sourceName;
  }


  public void setSourceName(String sourceName) {
    this.sourceName = sourceName;
  }


  public Dataflow sinkCategory(String sinkCategory) {
    
    this.sinkCategory = sinkCategory;
    return this;
  }

   /**
   * The name of the sink category
   * @return sinkCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "File", value = "The name of the sink category")

  public String getSinkCategory() {
    return sinkCategory;
  }


  public void setSinkCategory(String sinkCategory) {
    this.sinkCategory = sinkCategory;
  }


  public Dataflow sinkName(String sinkName) {
    
    this.sinkName = sinkName;
    return this;
  }

   /**
   * The description of the concrete sink value
   * @return sinkName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "File Name", value = "The description of the concrete sink value")

  public String getSinkName() {
    return sinkName;
  }


  public void setSinkName(String sinkName) {
    this.sinkName = sinkName;
  }


  public Dataflow relation(String relation) {
    
    this.relation = relation;
    return this;
  }

   /**
   * The relation of this data flow to the containing entity
   * @return relation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "TRANSMITTED_DATA", value = "The relation of this data flow to the containing entity")

  public String getRelation() {
    return relation;
  }


  public void setRelation(String relation) {
    this.relation = relation;
  }


  public Dataflow sourceMetaData(SourceSinkMetaData sourceMetaData) {
    
    this.sourceMetaData = sourceMetaData;
    return this;
  }

   /**
   * Get sourceMetaData
   * @return sourceMetaData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SourceSinkMetaData getSourceMetaData() {
    return sourceMetaData;
  }


  public void setSourceMetaData(SourceSinkMetaData sourceMetaData) {
    this.sourceMetaData = sourceMetaData;
  }


  public Dataflow sinkMetaData(SourceSinkMetaData sinkMetaData) {
    
    this.sinkMetaData = sinkMetaData;
    return this;
  }

   /**
   * Get sinkMetaData
   * @return sinkMetaData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SourceSinkMetaData getSinkMetaData() {
    return sinkMetaData;
  }


  public void setSinkMetaData(SourceSinkMetaData sinkMetaData) {
    this.sinkMetaData = sinkMetaData;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dataflow dataflow = (Dataflow) o;
    return Objects.equals(this.path, dataflow.path) &&
        Objects.equals(this.sourceCategory, dataflow.sourceCategory) &&
        Objects.equals(this.sourceName, dataflow.sourceName) &&
        Objects.equals(this.sinkCategory, dataflow.sinkCategory) &&
        Objects.equals(this.sinkName, dataflow.sinkName) &&
        Objects.equals(this.relation, dataflow.relation) &&
        Objects.equals(this.sourceMetaData, dataflow.sourceMetaData) &&
        Objects.equals(this.sinkMetaData, dataflow.sinkMetaData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(path, sourceCategory, sourceName, sinkCategory, sinkName, relation, sourceMetaData, sinkMetaData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dataflow {\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    sourceCategory: ").append(toIndentedString(sourceCategory)).append("\n");
    sb.append("    sourceName: ").append(toIndentedString(sourceName)).append("\n");
    sb.append("    sinkCategory: ").append(toIndentedString(sinkCategory)).append("\n");
    sb.append("    sinkName: ").append(toIndentedString(sinkName)).append("\n");
    sb.append("    relation: ").append(toIndentedString(relation)).append("\n");
    sb.append("    sourceMetaData: ").append(toIndentedString(sourceMetaData)).append("\n");
    sb.append("    sinkMetaData: ").append(toIndentedString(sinkMetaData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

