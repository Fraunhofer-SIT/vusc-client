/*
 * Public API
 * Assessment API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: helpdesk@codeinspect.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.fraunhofer.sit.sse.vusc.javaclient.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Information about an exporter that can transfer VUSC data to another system.
 */
@ApiModel(description = "Information about an exporter that can transfer VUSC data to another system.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-14T02:27:21.666995377Z[GMT]")
public class ExporterInformation {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_HUMAN_READABLE_NAME = "humanReadableName";
  @SerializedName(SERIALIZED_NAME_HUMAN_READABLE_NAME)
  private String humanReadableName;

  public static final String SERIALIZED_NAME_MIME_TYPE = "mimeType";
  @SerializedName(SERIALIZED_NAME_MIME_TYPE)
  private String mimeType;

  public ExporterInformation() { 
  }

  public ExporterInformation id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of this exporter
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "JIRA_EXPORTER", required = true, value = "The unique identifier of this exporter")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ExporterInformation description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A human-readable description of the exporter
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Exporter to Jira Issue Tracker", required = true, value = "A human-readable description of the exporter")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ExporterInformation humanReadableName(String humanReadableName) {
    
    this.humanReadableName = humanReadableName;
    return this;
  }

   /**
   * A human-readable name of the exporter
   * @return humanReadableName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Jira exporter", required = true, value = "A human-readable name of the exporter")

  public String getHumanReadableName() {
    return humanReadableName;
  }


  public void setHumanReadableName(String humanReadableName) {
    this.humanReadableName = humanReadableName;
  }


  public ExporterInformation mimeType(String mimeType) {
    
    this.mimeType = mimeType;
    return this;
  }

   /**
   * The MIME type of the export in case the exporter writes files
   * @return mimeType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "text/xml", required = true, value = "The MIME type of the export in case the exporter writes files")

  public String getMimeType() {
    return mimeType;
  }


  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExporterInformation exporterInformation = (ExporterInformation) o;
    return Objects.equals(this.id, exporterInformation.id) &&
        Objects.equals(this.description, exporterInformation.description) &&
        Objects.equals(this.humanReadableName, exporterInformation.humanReadableName) &&
        Objects.equals(this.mimeType, exporterInformation.mimeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, humanReadableName, mimeType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExporterInformation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    humanReadableName: ").append(toIndentedString(humanReadableName)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

