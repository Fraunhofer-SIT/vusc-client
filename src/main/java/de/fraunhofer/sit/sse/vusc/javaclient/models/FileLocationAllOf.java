/*
 * Public API
 * Assessment API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: helpdesk@codeinspect.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.fraunhofer.sit.sse.vusc.javaclient.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FileLocationAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-14T02:27:21.666995377Z[GMT]")
public class FileLocationAllOf {
  public static final String SERIALIZED_NAME_FILE_PATH = "filePath";
  @SerializedName(SERIALIZED_NAME_FILE_PATH)
  private String filePath;

  public static final String SERIALIZED_NAME_CHARACTER_START = "characterStart";
  @SerializedName(SERIALIZED_NAME_CHARACTER_START)
  private Integer characterStart;

  public static final String SERIALIZED_NAME_CHARACTER_LENGTH = "characterLength";
  @SerializedName(SERIALIZED_NAME_CHARACTER_LENGTH)
  private Integer characterLength;

  public FileLocationAllOf() { 
  }

  public FileLocationAllOf filePath(String filePath) {
    
    this.filePath = filePath;
    return this;
  }

   /**
   * The file&#39;s path
   * @return filePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "AndroidManifest.xml", value = "The file's path")

  public String getFilePath() {
    return filePath;
  }


  public void setFilePath(String filePath) {
    this.filePath = filePath;
  }


  public FileLocationAllOf characterStart(Integer characterStart) {
    
    this.characterStart = characterStart;
    return this;
  }

   /**
   * The position of the first character of this string
   * @return characterStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "51", value = "The position of the first character of this string")

  public Integer getCharacterStart() {
    return characterStart;
  }


  public void setCharacterStart(Integer characterStart) {
    this.characterStart = characterStart;
  }


  public FileLocationAllOf characterLength(Integer characterLength) {
    
    this.characterLength = characterLength;
    return this;
  }

   /**
   * The length of the string
   * @return characterLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "The length of the string")

  public Integer getCharacterLength() {
    return characterLength;
  }


  public void setCharacterLength(Integer characterLength) {
    this.characterLength = characterLength;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileLocationAllOf fileLocationAllOf = (FileLocationAllOf) o;
    return Objects.equals(this.filePath, fileLocationAllOf.filePath) &&
        Objects.equals(this.characterStart, fileLocationAllOf.characterStart) &&
        Objects.equals(this.characterLength, fileLocationAllOf.characterLength);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filePath, characterStart, characterLength);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileLocationAllOf {\n");
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    characterStart: ").append(toIndentedString(characterStart)).append("\n");
    sb.append("    characterLength: ").append(toIndentedString(characterLength)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

