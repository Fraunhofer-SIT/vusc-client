/*
 * Public API
 * Assessment API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: helpdesk@codeinspect.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.fraunhofer.sit.sse.vusc.javaclient.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.fraunhofer.sit.sse.vusc.javaclient.models.AdditionalData;
import de.fraunhofer.sit.sse.vusc.javaclient.models.Dataflow;
import de.fraunhofer.sit.sse.vusc.javaclient.models.Location;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * An information finding that is not a vulnerability, but potentially of interest to a security analyst
 */
@ApiModel(description = "An information finding that is not a vulnerability, but potentially of interest to a security analyst")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-14T02:27:21.666995377Z[GMT]")
public class InformationFinding {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private Location location;

  public static final String SERIALIZED_NAME_ADDITIONAL_DATA = "additionalData";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_DATA)
  private List<AdditionalData> additionalData = null;

  public static final String SERIALIZED_NAME_DATAFLOWS = "dataflows";
  @SerializedName(SERIALIZED_NAME_DATAFLOWS)
  private List<Dataflow> dataflows = null;

  public InformationFinding() { 
  }

  public InformationFinding id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The id")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public InformationFinding type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of finding
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "FtpCredentialsAnalysis_HardCodedFtpPassword", required = true, value = "The type of finding")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public InformationFinding location(Location location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Location getLocation() {
    return location;
  }


  public void setLocation(Location location) {
    this.location = location;
  }


  public InformationFinding additionalData(List<AdditionalData> additionalData) {
    
    this.additionalData = additionalData;
    return this;
  }

  public InformationFinding addAdditionalDataItem(AdditionalData additionalDataItem) {
    if (this.additionalData == null) {
      this.additionalData = new ArrayList<AdditionalData>();
    }
    this.additionalData.add(additionalDataItem);
    return this;
  }

   /**
   * A list of description-value data pairs relevant to this finding
   * @return additionalData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of description-value data pairs relevant to this finding")

  public List<AdditionalData> getAdditionalData() {
    return additionalData;
  }


  public void setAdditionalData(List<AdditionalData> additionalData) {
    this.additionalData = additionalData;
  }


  public InformationFinding dataflows(List<Dataflow> dataflows) {
    
    this.dataflows = dataflows;
    return this;
  }

  public InformationFinding addDataflowsItem(Dataflow dataflowsItem) {
    if (this.dataflows == null) {
      this.dataflows = new ArrayList<Dataflow>();
    }
    this.dataflows.add(dataflowsItem);
    return this;
  }

   /**
   * A list of data flows relevant to this finding
   * @return dataflows
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of data flows relevant to this finding")

  public List<Dataflow> getDataflows() {
    return dataflows;
  }


  public void setDataflows(List<Dataflow> dataflows) {
    this.dataflows = dataflows;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InformationFinding informationFinding = (InformationFinding) o;
    return Objects.equals(this.id, informationFinding.id) &&
        Objects.equals(this.type, informationFinding.type) &&
        Objects.equals(this.location, informationFinding.location) &&
        Objects.equals(this.additionalData, informationFinding.additionalData) &&
        Objects.equals(this.dataflows, informationFinding.dataflows);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, location, additionalData, dataflows);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InformationFinding {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("    dataflows: ").append(toIndentedString(dataflows)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

