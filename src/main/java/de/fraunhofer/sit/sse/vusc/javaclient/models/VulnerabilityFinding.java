/*
 * Public API
 * Assessment API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: helpdesk@codeinspect.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.fraunhofer.sit.sse.vusc.javaclient.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.fraunhofer.sit.sse.vusc.javaclient.models.AdditionalData;
import de.fraunhofer.sit.sse.vusc.javaclient.models.Dataflow;
import de.fraunhofer.sit.sse.vusc.javaclient.models.ExternalReference;
import de.fraunhofer.sit.sse.vusc.javaclient.models.Location;
import de.fraunhofer.sit.sse.vusc.javaclient.models.Verification;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * A vulnerability finding
 */
@ApiModel(description = "A vulnerability finding")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-14T02:27:21.666995377Z[GMT]")
public class VulnerabilityFinding {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private Location location;

  public static final String SERIALIZED_NAME_ADDITIONAL_DATA = "additionalData";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_DATA)
  private List<AdditionalData> additionalData = null;

  public static final String SERIALIZED_NAME_DATAFLOWS = "dataflows";
  @SerializedName(SERIALIZED_NAME_DATAFLOWS)
  private List<Dataflow> dataflows = null;

  /**
   * The severity rating of this vulnerability
   */
  @JsonAdapter(SeverityEnum.Adapter.class)
  public enum SeverityEnum {
    LOW("LOW"),
    
    MEDIUM("MEDIUM"),
    
    HIGH("HIGH"),
    
    NONE("NONE");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SeverityEnum fromValue(String value) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SeverityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeverityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SeverityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SeverityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SEVERITY = "severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private SeverityEnum severity;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_MITIGIATION = "mitigiation";
  @SerializedName(SERIALIZED_NAME_MITIGIATION)
  private String mitigiation;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_FINDING_INFORMATION = "findingInformation";
  @SerializedName(SERIALIZED_NAME_FINDING_INFORMATION)
  private String findingInformation;

  public static final String SERIALIZED_NAME_VERIFICATION = "verification";
  @SerializedName(SERIALIZED_NAME_VERIFICATION)
  private List<Verification> verification = null;

  public static final String SERIALIZED_NAME_REFERENCES = "references";
  @SerializedName(SERIALIZED_NAME_REFERENCES)
  private List<ExternalReference> references = null;

  public VulnerabilityFinding() { 
  }

  public VulnerabilityFinding id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The id")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public VulnerabilityFinding type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of finding
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "FtpCredentialsAnalysis_HardCodedFtpPassword", required = true, value = "The type of finding")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public VulnerabilityFinding location(Location location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Location getLocation() {
    return location;
  }


  public void setLocation(Location location) {
    this.location = location;
  }


  public VulnerabilityFinding additionalData(List<AdditionalData> additionalData) {
    
    this.additionalData = additionalData;
    return this;
  }

  public VulnerabilityFinding addAdditionalDataItem(AdditionalData additionalDataItem) {
    if (this.additionalData == null) {
      this.additionalData = new ArrayList<AdditionalData>();
    }
    this.additionalData.add(additionalDataItem);
    return this;
  }

   /**
   * A list of description-value data pairs relevant to this finding
   * @return additionalData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of description-value data pairs relevant to this finding")

  public List<AdditionalData> getAdditionalData() {
    return additionalData;
  }


  public void setAdditionalData(List<AdditionalData> additionalData) {
    this.additionalData = additionalData;
  }


  public VulnerabilityFinding dataflows(List<Dataflow> dataflows) {
    
    this.dataflows = dataflows;
    return this;
  }

  public VulnerabilityFinding addDataflowsItem(Dataflow dataflowsItem) {
    if (this.dataflows == null) {
      this.dataflows = new ArrayList<Dataflow>();
    }
    this.dataflows.add(dataflowsItem);
    return this;
  }

   /**
   * A list of data flows relevant to this finding
   * @return dataflows
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of data flows relevant to this finding")

  public List<Dataflow> getDataflows() {
    return dataflows;
  }


  public void setDataflows(List<Dataflow> dataflows) {
    this.dataflows = dataflows;
  }


  public VulnerabilityFinding severity(SeverityEnum severity) {
    
    this.severity = severity;
    return this;
  }

   /**
   * The severity rating of this vulnerability
   * @return severity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "HIGH", required = true, value = "The severity rating of this vulnerability")

  public SeverityEnum getSeverity() {
    return severity;
  }


  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }


  public VulnerabilityFinding category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * The category of this vulnerability
   * @return category
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Backend Credentials in Code", required = true, value = "The category of this vulnerability")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public VulnerabilityFinding description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of this vulnerability
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "<p>Credentials to an FTP server are hard-coded into this app.</p>", required = true, value = "The description of this vulnerability")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public VulnerabilityFinding mitigiation(String mitigiation) {
    
    this.mitigiation = mitigiation;
    return this;
  }

   /**
   * Measures which can be taken to fix this vulnerability
   * @return mitigiation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "<p>Use an external back-end server, which performs the FTP operation. This server may hardcode the password and should restrict the operations to valid usages only.</p>", value = "Measures which can be taken to fix this vulnerability")

  public String getMitigiation() {
    return mitigiation;
  }


  public void setMitigiation(String mitigiation) {
    this.mitigiation = mitigiation;
  }


  public VulnerabilityFinding title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The title of this vulnerability
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Hard-coded FTP credentials in code", required = true, value = "The title of this vulnerability")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public VulnerabilityFinding findingInformation(String findingInformation) {
    
    this.findingInformation = findingInformation;
    return this;
  }

   /**
   * An optional description specific to this finding
   * @return findingInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "\\n\\t            \\n\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\tDiscovered user name was 'u$3rn4me', password was 'p4$$w0rd' for server 'ftp.ftp.com'.\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\n            ", value = "An optional description specific to this finding")

  public String getFindingInformation() {
    return findingInformation;
  }


  public void setFindingInformation(String findingInformation) {
    this.findingInformation = findingInformation;
  }


  public VulnerabilityFinding verification(List<Verification> verification) {
    
    this.verification = verification;
    return this;
  }

  public VulnerabilityFinding addVerificationItem(Verification verificationItem) {
    if (this.verification == null) {
      this.verification = new ArrayList<Verification>();
    }
    this.verification.add(verificationItem);
    return this;
  }

   /**
   * Information about verification of this finding
   * @return verification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information about verification of this finding")

  public List<Verification> getVerification() {
    return verification;
  }


  public void setVerification(List<Verification> verification) {
    this.verification = verification;
  }


  public VulnerabilityFinding references(List<ExternalReference> references) {
    
    this.references = references;
    return this;
  }

  public VulnerabilityFinding addReferencesItem(ExternalReference referencesItem) {
    if (this.references == null) {
      this.references = new ArrayList<ExternalReference>();
    }
    this.references.add(referencesItem);
    return this;
  }

   /**
   * A list of references where more information can be found
   * @return references
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of references where more information can be found")

  public List<ExternalReference> getReferences() {
    return references;
  }


  public void setReferences(List<ExternalReference> references) {
    this.references = references;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityFinding vulnerabilityFinding = (VulnerabilityFinding) o;
    return Objects.equals(this.id, vulnerabilityFinding.id) &&
        Objects.equals(this.type, vulnerabilityFinding.type) &&
        Objects.equals(this.location, vulnerabilityFinding.location) &&
        Objects.equals(this.additionalData, vulnerabilityFinding.additionalData) &&
        Objects.equals(this.dataflows, vulnerabilityFinding.dataflows) &&
        Objects.equals(this.severity, vulnerabilityFinding.severity) &&
        Objects.equals(this.category, vulnerabilityFinding.category) &&
        Objects.equals(this.description, vulnerabilityFinding.description) &&
        Objects.equals(this.mitigiation, vulnerabilityFinding.mitigiation) &&
        Objects.equals(this.title, vulnerabilityFinding.title) &&
        Objects.equals(this.findingInformation, vulnerabilityFinding.findingInformation) &&
        Objects.equals(this.verification, vulnerabilityFinding.verification) &&
        Objects.equals(this.references, vulnerabilityFinding.references);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, location, additionalData, dataflows, severity, category, description, mitigiation, title, findingInformation, verification, references);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityFinding {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("    dataflows: ").append(toIndentedString(dataflows)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    mitigiation: ").append(toIndentedString(mitigiation)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    findingInformation: ").append(toIndentedString(findingInformation)).append("\n");
    sb.append("    verification: ").append(toIndentedString(verification)).append("\n");
    sb.append("    references: ").append(toIndentedString(references)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

